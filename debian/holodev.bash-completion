_holodev()
{
    local cur prev commands
    COMPREPLY=()
    cur="${COMP_WORDS[COMP_CWORD]}"
    prev="${COMP_WORDS[COMP_CWORD-1]}"
    holodev_command="${COMP_WORDS[1]}"
    commands="attach create destroy help --help info list restart run start setup stop --version"

    opts_create()  { echo "--branch --no-branch --release -r --dummy --arch --bind --verbose"; }
    opts_attach()  { echo "--branch --no-branch --dummy --verbose"; }
    opts_destroy() { opts_attach; }
    opts_info()    { opts_attach; }
    opts_restart() { opts_attach; }
    opts_run()     { opts_attach; }
    opts_start()   { echo "--branch --no-branch --dummy --bind --verbose"; }
    opts_stop()    { opts_attach; }
    opts_list()    { echo "--all --dummy --verbose"; }
    opts_setup()   { echo "--dummy --verbose"; }

    for command in $commands; do
      if [ -n $holodev_command ] && [ "$holodev_command" = $command ]; then
        case "${prev}" in
          --branch)
            COMPREPLY=( $(compgen -W "$(git rev-parse --abbrev-ref --all)" -- ${cur}) )
            return 0
            ;;
          --release|-r)
            COMPREPLY=( $(compgen -W "squeeze wheezy jessie stable testing stretch sid" -- ${cur}) )
            return 0
            ;;
          --arch)
            COMPREPLY=( $(compgen -W "armhf armel mipsn32 mipsn32el mipsn32r6 mipsn32r6el mips64 mips64el mips64r6 mips64r6el powerpcspe x32 i386 ia64 alpha amd64 armeb arm arm64 avr32 hppa m32r m68k mips mipsel mipsr6 mipsr6el nios2 or1k powerpc powerpcel ppc64 ppc64el s390 s390x sh3 sh3eb sh4 sh4eb sparc sparc64 tilegx" -- ${cur}) )
            return 0
            ;;
        esac
        case "${holodev_command}" in
          create|attach|destroy|info|restart|run|start|setup|stop|list)
            available_opts=
            for opt in `opts_$holodev_command`; do
              for word in ${COMP_WORDS[@]}; do
                if [ -n "$opt" ] && [ "$opt" = "$word" ]; then
                  opt=
                fi
              done
              available_opts="$available_opts $opt"
            done
            COMPREPLY=( $(compgen -W "$available_opts" -- ${cur}) )
            return 0
            ;;
          --version)
            return 0
            ;;
        esac
        return 0
      fi
    done

    COMPREPLY=( $(compgen -W "${commands}" -- ${cur}) )
    return 0
}
complete -F _holodev holodev
